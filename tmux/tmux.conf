unbind C-b
set -g prefix C-o
bind C-Space send-prefix
bind-key b set status
set -g allow-passthrough on #directly to underlying terminal
set-window-option -g mode-keys vi
set -g mouse on
set -g pane-active-border-style bg=default,fg="#58E2E2"
set -g pane-border-style fg="#0D464E"
set-option -g set-clipboard on
set -g default-terminal "tmux-256color"



#status bar setting
set-option -g status on
set -g status-style bg=default
set -g status-style bold 
set -g status-left-length 85 
set -g status-right-length 60
set -g status-right '#{network_speed} CPU:#{cpu_percentage} RAM:#{ram_percentage} GPU:#{gpu_percentage} %a %h-%d %H:%M '
set -g @network_speed_interface 'enp8s0' #specify which network interface
set -g @cpu_percentage_format "%2.0f"
set -g @ram_percentage_format "%2.0f"
set -g @gpu_percentage_format "%2.0f"
set -g @network_speed_format '%1.0f'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'minhdanh/tmux-network-speed'
set -g @plugin 'tmux-plugins/tmux-yank'



#navigator key bindings
bind  c  new-window  -c "#{pane_current_path}" #new window with current directroy
unbind %
#rebind the key to split horizontal windows
bind | split-window -h -c "#{pane_current_path}"
unbind '"'
bind - split-window -v -c "#{pane_current_path}"
unbind r
bind r source-file ~/.config/tmux/tmux.conf # rebind the key to reload the tmux config file
#rebind the key to navigator the cursor to splited panel
bind-key -n C-h select-pane -L
bind-key -n C-l select-pane -R
bind-key -n C-j select-pane -D
bind-key -n C-k select-pane -U
#remove default leader/prefix key and set to Ctrl + o


#tmux in neovim
#decide whether we're in a Vim process, if get true, thy key bindings below are worked
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|n?vim?x?)(-wrapped)?(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 30'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 10'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 10'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 30'

bind-key -T copy-mode-vi M-h resize-pane -L 30
bind-key -T copy-mode-vi M-j resize-pane -D 10
bind-key -T copy-mode-vi M-k resize-pane -U 10
bind-key -T copy-mode-vi M-l resize-pane -R 30

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
